name: Build and Release Electron App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checks
        run: npm run ts

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    needs: test
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: 'mac'
            arch: 'universal'
          - os: ubuntu-latest
            platform: 'linux'
            arch: 'x64'
          - os: windows-latest
            platform: 'win'
            arch: 'x64'
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon0 libxss1 libasound2-dev

      - name: Build Electron app
        run: npm run make
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dyad-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            out/make/zip/darwin/**/*.zip
            out/make/dmg/**/*.dmg
          retention-days: 30

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dyad-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            out/make/squirrel.windows/**/*.exe
            out/make/squirrel.windows/**/*.nupkg
            out/make/zip/win32/**/*.zip
          retention-days: 30

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dyad-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            out/make/deb/**/*.deb
            out/make/rpm/**/*.rpm
            out/make/zip/linux/**/*.zip
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Display structure of downloaded files
        run: find dist/ -type f

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
          files: |
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.zip
            dist/**/*.deb
            dist/**/*.rpm
            dist/**/*.nupkg
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build on PR for testing (artifacts only, no release)
  pr-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon0 libxss1 libasound2-dev

      - name: Build app (package only)
        run: npm run package
        env:
          NODE_ENV: production

      - name: Upload PR build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dyad-pr-${{ github.event.number }}-linux
          path: out/
          retention-days: 7